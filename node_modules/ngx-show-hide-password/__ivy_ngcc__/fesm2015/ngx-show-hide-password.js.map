{"version":3,"file":"ngx-show-hide-password.js","sources":["../../../projects/ngx-show-hide-password/src/lib/show-hide.service.ts","../../../projects/ngx-show-hide-password/src/lib/show-hide-trigger.directive.ts","../../../projects/ngx-show-hide-password/src/lib/show-hide-status.directive.ts","../../../projects/ngx-show-hide-password/src/lib/show-hide-input.directive.ts","../../../projects/ngx-show-hide-password/src/lib/show-hide-password.component.ts","../../../projects/ngx-show-hide-password/src/lib/show-hide-password.module.ts","../../../projects/ngx-show-hide-password/src/public_api.ts","../../../projects/ngx-show-hide-password/src/ngx-show-hide-password.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject, ReplaySubject } from 'rxjs';\n\ninterface IState {\n  id: string;\n  show: boolean;\n  subject?: Subject<boolean>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowHideService {\n  private readonly states = [];\n\n  constructor() {}\n\n  private getIO(id: string): IState {\n    let io = this.states.find(o => o.id === id);\n    if (!io && id) {\n      io = this.init(id);\n    }\n    return io;\n  }\n\n  private init(id: string): IState {\n    const subject = new ReplaySubject<boolean>(1);\n    const io = {\n      id,\n      show: false,\n      subject\n    };\n    this.states.push(io);\n    return io;\n  }\n\n  private saveAndProadcast(io: IState, show: boolean) {\n    io.show = show;\n    io.subject.next(io.show);\n  }\n\n  public getObservable(id: string): Observable<boolean> {\n    return this.getIO(id).subject;\n  }\n\n  public setShow(id: string, show: boolean): void {\n    this.saveAndProadcast(this.getIO(id), show);\n  }\n\n  public toggleShow(id: string): void {\n    const io = this.getIO(id);\n    this.saveAndProadcast(io, !io.show);\n  }\n}\n","import { Directive, HostListener, Input, ErrorHandler } from '@angular/core';\nimport { ShowHideService } from './show-hide.service';\n\n@Directive({\n  selector: '[showHideTrigger]'\n})\nexport class ShowHideTriggerDirective {\n  @Input() showHideTrigger?: string;\n\n  constructor(private service: ShowHideService, private errorHandler: ErrorHandler) {}\n\n  @HostListener('click')\n  onClick() {\n    if (this.showHideTrigger) {\n      this.service.toggleShow(this.showHideTrigger);\n    } else {\n      this.errorHandler.handleError(new Error(`Status can not be changed without [id].`));\n    }\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input, ErrorHandler, OnDestroy } from '@angular/core';\nimport { ShowHideService } from './show-hide.service';\nimport { Subscription } from 'rxjs';\n\nexport interface ShowHideStatusConfig {\n  id?: string;\n  show?: string;\n  hide?: string;\n  materialIcon?: boolean;\n}\n\n@Directive({\n  selector: '[showHideStatus]'\n})\nexport class ShowHideStatusDirective implements OnDestroy {\n  private config: ShowHideStatusConfig;\n  private subscription: Subscription;\n\n  @Input() set showHideStatus(config: ShowHideStatusConfig) {\n    this.init(config);\n  }\n\n  constructor(\n    private service: ShowHideService,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private errorHandler: ErrorHandler\n  ) {}\n\n  private init(config: ShowHideStatusConfig): void {\n    const defaultConfig = {\n      show: 'visibility',\n      hide: 'visibility_off',\n      materialIcon: false,\n      id: null\n    };\n    this.config = {\n      ...defaultConfig,\n      ...config\n    };\n    if (this.config.id) {\n      this.subscription = this.service\n        .getObservable(this.config.id)\n        .subscribe(show => this.updateStatus(show));\n    } else {\n      this.errorHandler.handleError(new Error(`Status can not be set without [id].`));\n    }\n  }\n\n  private updateStatus(show: boolean) {\n    if (this.config.materialIcon) {\n      this.renderer.setProperty(\n        this.el.nativeElement,\n        'innerHTML',\n        show ? this.config.hide : this.config.show\n      );\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, !show ? this.config.hide : this.config.show);\n      this.renderer.addClass(this.el.nativeElement, show ? this.config.hide : this.config.show);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, Renderer2, OnInit, OnDestroy, HostBinding, AfterViewInit, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ShowHideService } from './show-hide.service';\n\n@Directive({\n  selector: 'input[showHideInput]'\n})\nexport class ShowHideInputDirective implements OnInit, OnDestroy {\n  private subscription: Subscription;\n  @Input() id: string;\n\n  private registerElementId() {\n    if (!this.id) {\n      throw new Error(`No attribute [id] found.`);\n    }\n    this.service.setShow(this.id, this.el.nativeElement.type !== 'password');\n  }\n\n  constructor(\n    private service: ShowHideService,\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {  }\n\n  ngOnInit(): void {\n    this.registerElementId();\n    this.service\n      .getObservable(this.id)\n      .subscribe(show =>\n        this.renderer.setAttribute(this.el.nativeElement, 'type', show ? 'text' : 'password')\n      );\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  Renderer2,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { ShowHideService } from './show-hide.service';\n\nexport enum BtnStyle {\n  Primary = 'primary',\n  Secondary = 'secondary',\n  Success = 'success',\n  Danger = 'danger',\n  Warning = 'warning',\n  Info = 'info',\n  Dark = 'dark',\n  Light = 'light'\n}\n\n// hail jed https://gist.github.com/jed/982883\nconst uuid = (a?: any) =>\n  a\n    ? // tslint:disable-next-line: no-bitwise\n      (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n\n/**\n * Add a split input button to password or text input. Toggles input type between \"text\" and \"password\".\n *\n * @example\n * <show-hide-password size=\"sm|lg\">\n * <input type=\"password\" name=... />\n * </show-hide-password>\n */\n\n@Component({\n  selector: 'show-hide-password',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <ng-content></ng-content>\n    <div class=\"input-group-append ngx-show-hide-password\">\n      <button\n        class=\"btn\"\n        [ngClass]=\"(btnOutline ? 'btn-outline-' + btnStyle : 'btn-' + btnStyle)\"\n        type=\"button\"\n        [showHideTrigger]=\"id\"\n      >\n        <fa-icon\n          [fixedWidth]=\"true\"\n          size=\"lg\"\n          [icon]=\"(isHidden ? faEye : faEyeSlash)\"\n          [showHideStatus]=\"{ id: id }\"\n        ></fa-icon>\n      </button>\n    </div>\n  `\n})\nexport class ShowHidePasswordComponent implements OnInit, OnDestroy {\n  private subscription: Subscription;\n\n  @Input()\n  public btnStyle: BtnStyle = BtnStyle.Secondary;\n\n  @Input()\n  public btnOutline = true;\n\n  @Input()\n  public size: 'sm' | 'lg';\n\n  public input: any;\n\n  public isHidden: boolean;\n\n  public id: string;\n\n  public faEye = faEye;\n  public faEyeSlash = faEyeSlash;\n\n  constructor(\n    private service: ShowHideService,\n    private elem: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit(): void {\n    this.input = this.elem.nativeElement.querySelector('input');\n    if (!this.input) {\n      throw new Error(`No input element found.`);\n    }\n    this.id = this.input.getAttribute('id');\n    if (!this.id) {\n      this.id = 'showHideInput_' + uuid();\n      this.renderer.setAttribute(this.input, 'id', this.id);\n    }\n    this.renderer.addClass(this.elem.nativeElement, 'input-group');\n    if (this.size === 'sm') {\n      this.renderer.addClass(this.elem.nativeElement, 'input-group-sm');\n    } else if (this.size === 'lg') {\n      this.renderer.addClass(this.elem.nativeElement, 'input-group-lg');\n    }\n    this.isHidden = this.input.type === 'password';\n    this.renderer.addClass(this.input, 'form-control'); // just to be sure\n    this.service.setShow(this.id, this.input.type !== 'password');\n    this.subscription = this.service\n      .getObservable(this.id)\n      .subscribe(show => {\n        this.isHidden = !show;\n        this.renderer.setAttribute(this.input, 'type', show ? 'text' : 'password');\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ShowHideTriggerDirective } from './show-hide-trigger.directive';\nimport { ShowHideInputDirective } from './show-hide-input.directive';\nimport { ShowHideStatusDirective } from './show-hide-status.directive';\nimport { ShowHidePasswordComponent } from './show-hide-password.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, FontAwesomeModule],\n  exports: [\n    ShowHidePasswordComponent,\n    ShowHideTriggerDirective,\n    ShowHideInputDirective,\n    ShowHideStatusDirective\n  ],\n  declarations: [\n    ShowHidePasswordComponent,\n    ShowHideTriggerDirective,\n    ShowHideInputDirective,\n    ShowHideStatusDirective\n  ]\n})\nexport class ShowHidePasswordModule {}\n","/*\n * Public API Surface of ngx-show-hide-password\n */\n\nexport * from './lib/show-hide.service';\nexport * from './lib/show-hide-trigger.directive';\nexport * from './lib/show-hide-status.directive';\nexport * from './lib/show-hide-input.directive';\nexport * from './lib/show-hide-password.component';\nexport * from './lib/show-hide-password.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}